{"version":3,"sources":["components/Enter.js","components/Game.js","components/GameOver.js","App.js","serviceWorker.js","index.js"],"names":["Enter","props","useState","name","setName","redirect2","setRedirect2","push","to","playerCards","computerCards","cardsArr","x","i","className","id","Form","Group","Control","type","placeholder","onChange","e","value","target","Button","onClick","alert","tArray","tNum","Math","floor","random","filter","length","k","t","cArray","cNum","afterFilter2","afterFilter3","j","l","gameDetails","Game","player","setI","lose","setLose","win","setWin","gameOverDetails","GameOver","winlose","playerUpdate","gameODetails","App","setPlayer","fullName","numOfWins","numOfLoses","numOfGames","result","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a007054.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nfunction Enter(props) {\r\n    const [name,setName] = useState('');\r\n    const [redirect2, setRedirect2] = useState(false);\r\n\r\n    if (redirect2) {\r\n        return <Redirect push to=\"/game\" />;\r\n    }\r\n\r\n    var playerCards = [];\r\n    var computerCards = [];\r\n    let cardsArr = [];\r\n    let x = 1;\r\n    for(let i=0; i<52; i++){\r\n        cardsArr.push(x);\r\n        i++;\r\n        cardsArr.push(x);\r\n        i++;\r\n        cardsArr.push(x);\r\n        i++;\r\n        cardsArr.push(x);\r\n        x++;\r\n    }\r\n\r\n    \r\n\r\n    function handleChange(e){\r\n        let value=e.target.value;\r\n        setName(value);\r\n    }\r\n\r\n    function handleClick(){\r\n        if(name === ''){\r\n            alert('Error')\r\n        } else {\r\n            let tArray = [];\r\n            for(let i=0;i<26;i++){\r\n                let tNum = Math.floor(Math.random() * 52);\r\n                let afterFilter = tArray.filter(function(i){\r\n                    return i === tNum\r\n                })\r\n                if(afterFilter.length===0){\r\n                    tArray.push(tNum);\r\n                } else {\r\n                    i--;\r\n                }\r\n            }\r\n            for(let k=0;k<tArray.length;k++){\r\n                let t = tArray[k];\r\n                playerCards.push(cardsArr[t]);\r\n            }\r\n            let cArray = [];\r\n            for(let j=0;j<26;j++){\r\n                let cNum = Math.floor(Math.random() * 52);\r\n                let afterFilter2 = tArray.filter(function(i){\r\n                    return i === cNum\r\n                })\r\n                let afterFilter3 = cArray.filter(function(j){\r\n                    return j === cNum\r\n                })\r\n                if(afterFilter2.length===0 && afterFilter3.length===0){\r\n                    cArray.push(cNum);\r\n                } else {\r\n                    j--;\r\n                }\r\n            }\r\n            for(let l=0;l<cArray.length;l++){\r\n                let x = cArray[l];\r\n                computerCards.push(cardsArr[x]);\r\n            }\r\n            props.gameDetails(name, playerCards, computerCards);\r\n            setRedirect2(true)\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-4\"></div>\r\n                <div className=\"col-4\">\r\n                    <label id=\"header\">Ready for WAR</label>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-4\"></div>\r\n            <div className=\"col-4\">\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Control className=\"input\" type=\"text\" placeholder=\"enter your name\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form>\r\n                </div>\r\n                <div className=\"col-4\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-4\"></div>\r\n            <div className=\"col-4\">\r\n                <Button className=\"btn\" onClick={handleClick}>Start</Button>\r\n            </div>\r\n            <div className=\"col-4\"></div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Enter;","import React,{useState} from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport {Redirect} from 'react-router-dom';\r\nimport '../App.css'\r\n\r\nfunction Game(props) {\r\nconst [player,setPlayer] = useState(props.player);\r\nconst [i,setI] = useState(0);\r\nconst [redirect2, setRedirect2] = useState(false);\r\nconst [lose, setLose] = useState(0);\r\nconst [win, setWin] = useState(0);\r\n\r\nif (redirect2) {\r\n    return <Redirect push to=\"/gameover\" />;\r\n}\r\n    function handleClick(){\r\n        if(player.computerCards[i]>player.playerCards[i]){\r\n            setLose(lose+1);\r\n        } else if(player.computerCards[i]<player.playerCards[i]) {\r\n            setWin(win+1);\r\n        }\r\n        if(i<26){\r\n        setI(i+1);\r\n        } else {\r\n            props.gameOverDetails(lose, win)\r\n            setRedirect2(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-3'></div>\r\n                <div className='col-2'>\r\n                    <label className='lbl'>Computer</label>\r\n                </div>\r\n                <div className='col-7'></div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-5'></div>\r\n                <div className='col-2 card'><p>{player.computerCards[i]}</p></div>\r\n                <div className='col-5'></div>\r\n            </div>\r\n            <br />\r\n            <div className='row'>\r\n                <div className='col-5'></div>\r\n                <div className='col-2 card'><p>{player.playerCards[i]}</p></div>\r\n                <div className='col-5'></div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-7'>\r\n                <Button className=\"btn\" onClick={handleClick}>Next</Button>\r\n                </div>\r\n                <div className='col-2'>\r\n                    <label className='lbl'>You</label>\r\n                </div>\r\n                <div className='col-3'></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport '../App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction GameOver(props) {\r\n    var winlose = '';\r\n    if(props.win>props.lose){\r\n        winlose = 'Win';\r\n        props.playerUpdate('win');\r\n    }\r\n    else if(props.win<props.lose){\r\n        winlose = 'Lose';\r\n        props.playerUpdate('lose');\r\n    }\r\n    else winlose = 'Teko';\r\n\r\n    function handleClick(){\r\n        var playerCards = [];\r\n        var computerCards = [];\r\n        let cardsArr = [];\r\n        let x = 1;\r\n        for(let i=0; i<52; i++){\r\n            cardsArr.push(x);\r\n            i++;\r\n            cardsArr.push(x);\r\n            i++;\r\n            cardsArr.push(x);\r\n            i++;\r\n            cardsArr.push(x);\r\n            x++;\r\n        }\r\n                let tArray = [];\r\n                for(let i=0;i<26;i++){\r\n                    let tNum = Math.floor(Math.random() * 52);\r\n                    let afterFilter = tArray.filter(function(i){\r\n                        return i === tNum\r\n                    })\r\n                    if(afterFilter.length===0){\r\n                        tArray.push(tNum);\r\n                    } else {\r\n                        i--;\r\n                    }\r\n                }\r\n                for(let k=0;k<tArray.length;k++){\r\n                    let t = tArray[k];\r\n                    playerCards.push(cardsArr[t]);\r\n                }\r\n                let cArray = [];\r\n                for(let j=0;j<26;j++){\r\n                    let cNum = Math.floor(Math.random() * 52);\r\n                    let afterFilter2 = tArray.filter(function(i){\r\n                        return i === cNum\r\n                    })\r\n                    let afterFilter3 = cArray.filter(function(j){\r\n                        return j === cNum\r\n                    })\r\n                    if(afterFilter2.length===0 && afterFilter3.length===0){\r\n                        cArray.push(cNum);\r\n                    } else {\r\n                        j--;\r\n                    }\r\n                }\r\n                for(let l=0;l<cArray.length;l++){\r\n                    let x = cArray[l];\r\n                    computerCards.push(cardsArr[x]);\r\n                }\r\n                props.gameODetails(playerCards, computerCards);\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col-4'></div>\r\n                <div className='col-4'><label id='header2'>{winlose}</label></div>\r\n                <div className='col-4'></div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-4'></div>\r\n                <div className='col-4'><label id='header3'>{props.win}-{props.lose}</label></div>\r\n                <div className='col-4'></div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-4'></div>\r\n                <div className='col-4'><Link to='/game'><Button className=\"btn\" onClick={handleClick}>Again?</Button></Link></div>\r\n                <div className='col-4'></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameOver;","import React, {useState} from 'react';\nimport {HashRouter as Router , Route , Switch} from 'react-router-dom';\nimport Enter from './components/Enter';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\nimport './App.css';\n\nfunction App() {\n  const [player,setPlayer] = useState('');\n  const [lose, setLose] =  useState(0);\n  const [ win, setWin] = useState(0);\n\n  function gameDetails(name, playerCards, computerCards){\n    setPlayer({fullName: name, numOfWins: 0, numOfLoses: 0, numOfGames: 0, playerCards: playerCards, computerCards: computerCards})\n  }\n\n  function gameOverDetails(lose, win){\n    setLose(lose);\n    setWin(win);\n  }\n\n  function playerUpdate(result){\n    if(result === 'win'){\n      player.numOfWins = player.numOfWins+1;\n    } else {\n      player.numOfLoses = player.numOfLoses+1;\n    }\n  }\n  function gameODetails(playerCards,computerCards){\n    player.playerCards = playerCards;\n    player.computerCards = computerCards;\n  }\n\n  return (\n    <div>\n      <Router>\n         <Switch>\n            <Route exact path=\"/\" render={() => (<Enter gameDetails={gameDetails}/>)}/>\n            <Route path='/game' render={() => (<Game player={player} gameOverDetails={gameOverDetails} />)} />\n            <Route path='/gameover' render={() => (<GameOver gameODetails={gameODetails} lose={lose} win={win} playerUpdate={playerUpdate} />)} />\n            </Switch> \n            </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}